version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i caches/app.tar | true

      - run:
          name: Build, Push and Deploy image
          no_output_timeout: 40m
          command: |
            docker build --cache-from=bloomsburyai/cape --tag bloomsburyai/cape --file deployment/Dockerfile --rm=false --build-arg COMMIT_SHA1=$CIRCLE_SHA1 .
            docker tag  bloomsburyai/cape  bloomsburyai/cape:$CIRCLE_SHA1
            docker run -d --ulimit core=0:0 --user root --rm --name cape_instance bloomsburyai/cape
            sleep 60
            docker exec cape_instance pytest -vs --pyargs cape_webservices.tests --junitxml=/mnt/test-results.xml
            docker login -u lulloa -p $DOCKERHUB_PASSWORD
            docker push bloomsburyai/cape
      - run:
          name: Copy test artifacts from remote environment to current workspace
          when: always
          command: |
          mkdir -p test-results/pytest/
          docker cp cape_instance:/mnt/test-results.xml test-results/pytest/test-results.xml

      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

      - run:
          name: Save Docker image layer cache
          when: always
          command: |
            mkdir -p caches
            docker save -o caches/app.tar bloomsburyai/cape
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          when: always
          paths:
            - caches/app.tar
